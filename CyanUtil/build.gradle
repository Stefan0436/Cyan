plugins {
    id 'java'
	id 'maven-publish'
}
apply from: '../asf.mvn.publish.gradle'
apply from: '../config.gradle'
apply plugin: 'eclipse'
buildDir = '../build/CyanUtil'

sourceCompatibility = '1.11'
targetCompatibility = '1.11'

group="org.asf.cyan"
def authorname="AerialWorks Software Foundation"
configurePublish {
	pretty_name "Cyan Utilities Package"
	description "Cyan Utilities, dynamic classloader, game execution sides, load phases and more"
	page "https://aerialworks.ddns.net/maven"
	address "https://aerialworks.ddns.net/maven"
	
	author {
		name "$authorname"
		id "ASF"
	}
	
	license {
		name "GNU Lesser General Public License v3.0"
		url "https://www.gnu.org/licenses/lgpl-3.0.txt"
	}
}

version="1.0.0.A21"
jar.dependsOn('processResources')

repositories {
    mavenCentral()
	maven { url = 'https://repo.spongepowered.org/maven' }
	maven { name = "AerialWorks"; url = "https://aerialworks.ddns.net/maven" }
}

dependencies {
    testImplementation 'junit:junit:4.12'
	implementation project(":CyanComponents")
    //implementation "org.spongepowered:mixin:${mixinversion}"
}

jar {
	destinationDirectory = file('../build/CyanUtil/Jars')
	manifest {
		attributes([
			"Specification-Title": project.name,
			"Specification-Vendor": "${authorname}",
			"Specification-Version": project.version,
			"Implementation-Title": project.name,
			"Implementation-Version": project.version,
			"Implementation-Vendor" :"${authorname}",
			"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
		])
	}
	exclude "**/extra/**"
	exclude "**/tests/**"
	includeEmptyDirs = false
}

task javaDocs(type: Javadoc) {
	classpath = sourceSets.main.runtimeClasspath
	source = sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: 'javaDocs') {
	from javadoc
	classifier = 'javadoc'
	exclude "**/extra/**"
	destinationDirectory = file('../build/CyanUtil/Javadocs')
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
	exclude "**/extra/**"
	destinationDirectory = file('../build/CyanUtil/Source jars')
}

artifacts {
	archives sourcesJar
	archives javadocJar
}

test {
    include "**/**Test**"
    exclude "**/**SpecialTest**"
    minHeapSize = "128m"
  	maxHeapSize = "2G"
}

task specialTest (type: Test, dependsOn: test) {
    include "**/**SpecialTest**"
    minHeapSize = "128m"
  	maxHeapSize = "2G"
}

initializeASFMVNPublish()
